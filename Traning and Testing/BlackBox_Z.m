function [y1] = BlackBox_Z(x1)
%BLACKBOX_Z neural network simulation function.
%
% Auto-generated by MATLAB, 20-Jan-2023 13:55:58.
% 
% [y1] = BlackBox_Z(x1) takes these arguments:
%   x = 6xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2 3];
x1_step2.xoffset = [10.0119839684004;10.0065866758611;-9.99738929317946];
x1_step2.gain = [0.200281562308473;0.200266191530816;0.400345740015214];
x1_step2.ymin = -1;

% Layer 1
b1 = [-3.6221451560203807851;-3.5774062515918267913;-1.9677104833071450418;1.1631658768674413285;-0.43137149616534270491;0.69097423919057998631;1.0878434291178309401;-1.5671510125982588413;-2.2200027504232373587;2.8292554745817493078];
IW1_1 = [-0.35026811561952958529 0.82835960464032953876 -2.6628051910150158932;-0.29579596208646041777 2.599049078430529125 0.95890530103759530345;0.74167419284373881094 -0.73650226432031262735 2.606371446159580163;-2.4845145845717491184 -1.4202829342292617731 -2.4494413442816869164;-0.72879117681064120582 -0.70248175681922742086 -4.0595711566807022308;1.201410130479373839 -0.43080984036037672791 -2.818343055722444479;2.1931441893812082533 1.0937403153746907414 -1.3365798344926187458;-2.2439216377679658265 -0.29351309765736044444 2.5233754615454451198;-2.2414273319636945914 -1.4806749240104948306 -0.0061858104874942254625;1.480121759841076079 1.10647956381289303 -1.3285708820217552173];

% Layer 2
b2 = [0.21643757124806914383;0.60172382127598478263;-0.20408311712228427437;-0.0174862519672850103;0.14354837952869436979];
LW2_1 = [-0.041644679787305037555 0.32201391406595680778 -0.0063945359060577841581 0.18315173551533298069 -0.030168972417692022092 -0.42972419429463848406 0.75665112343387896932 0.18886129807741361408 -0.33402871964730268539 -1.3016603971010360929;0.013872028229004027336 -0.10513420674031700996 0.15495202239351726914 0.08069003311382294541 -0.077364005251025824705 0.090814442586605800822 0.33352369714091711916 0.24600848925166163284 0.41163728096095281161 0.443050981345473327;-0.058947257595735644276 0.036720482468611093108 -0.019851576258732919755 0.0093818634289251773284 0.041743677690704555916 0.0094616688550183472572 0.021243371257485488268 0.079804003609204005043 -0.13066096615672356807 -0.076894995888688588703;0.22632686073008337346 0.024631461575841465117 -0.19399968025889799406 -0.13455484151824304018 0.0095580233424924550961 -0.057332703440794358096 -0.094322492752109132752 -0.11211467769094077274 0.010165095650115307802 -0.27457141905607629351;-0.13725041902825096951 -0.019157540794769660486 0.12143324931959328938 0.10379389142826805914 0.001594701960651408049 0.045566372622549838889 0.16671410211293463677 0.18054507460086077764 0.085537136033415658853 0.24512486261692681411];

% Output 1
y1_step2.ymin = -1;
y1_step2.gain = [55.4002673311302;4.7829629632509;1.19101719462884;0.436651695100243;0.54010909871519];
y1_step2.xoffset = [-0.000374712299585504;-0.401499368551371;-0.422264601963852;-0.684913052772866;-7.92452750839075];
y1_step1.xrows = 6;
y1_step1.keep = [2 3 4 5 6];
y1_step1.remove = 1;
y1_step1.constants = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step2);
y1 = removeconstantrows_reverse(y1,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end

% Remove Constants Output Reverse-Processing Function
function x = removeconstantrows_reverse(y,settings)
  Q = size(y,2);
  x = nan(settings.xrows,Q,'like',y);
  x(settings.keep,:) = y;
  x(settings.remove,:) = repmat(settings.constants,1,Q);
end
