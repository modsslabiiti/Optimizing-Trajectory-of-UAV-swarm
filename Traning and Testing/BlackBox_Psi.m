function [y1] = BlackBox_Psi(x1)
%BLACKBOX_PSI neural network simulation function.
%
% Auto-generated by MATLAB, 20-Jan-2023 13:56:07.
% 
% [y1] = BlackBox_Psi(x1) takes these arguments:
%   x = 6xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2 3];
x1_step2.xoffset = [10.0119839684004;10.0065866758611;-9.99738929317946];
x1_step2.gain = [0.200281562308473;0.200266191530816;0.400345740015214];
x1_step2.ymin = -1;

% Layer 1
b1 = [3.0212572826959882555;-2.884060016921748737;1.5472294224968308196;-1.2844444322510584211;-0.29776116642207356433;-0.089854116953777707355;-1.5925652476624245768;-2.0992807129718733528;-1.8925767864407325725;3.1337805427827225557];
IW1_1 = [-0.2783956549158697058 2.3849304264390966956 -1.7383626452616058877;1.8905367418441172411 -0.28148761911114250633 -1.6666889673913860559;-1.5504489964337584418 2.3161030053452282829 -1.2020662405435407205;-0.082423566035359413506 -1.8533741680893036641 2.0171355974593581095;0.91451845023777478261 -2.576383220500820137 -0.22360242767582957923;1.3037232189977845387 -0.89600453246933187135 -1.9427105529526973449;-2.5693993558182235404 0.20175316577387522599 1.936757095166536935;-2.0921371558731669538 0.63259832410899419219 -1.4819573658881384226;-3.0670956783076688268 0.33249752379620300946 1.7259918691438516092;2.1703368971063921045 -1.6947747410072360186 0.14284114035570255608];

% Layer 2
b2 = [-0.062364668617928144256;-0.19308378321078373263;0.16180076397310141911;-0.19986023356706325571;0.25185486671482171239];
LW2_1 = [0.098750718535694878564 -0.15773129699772070467 -0.10051083439933604369 0.59779516897338058623 0.19774334689024103406 0.89442321569346716625 -0.25530555093836299063 0.90499118550668633532 0.49763860892807865177 0.40884761938418756611;-0.52934373151939584368 0.45985934105948839123 0.49578930618629601934 0.37257356395083562894 0.32356965964708078731 -0.21055153112896998757 0.05820156639546589239 -0.030457325614782204681 -0.53386646722615282989 0.61385884016470826374;0.10829245324556854846 -0.039111470166740575083 -0.03379649890003985635 0.17915577637542889899 -0.20384051048613782697 0.031814590503374318153 -0.11689463186583751164 -0.013417514552016979179 -0.031673583418756146024 -0.10887233076864330505;0.095649696720749410872 -0.29372353310927756809 -0.086045534568965256761 -0.13075863170254120593 0.034209507628682120361 0.10021406563151080693 0.43222018047486310266 -0.0062188052511927965904 -0.32106009123119538806 0.078537132818377569654;-0.080248096969672250145 0.16327677729303982646 0.051742109398540514498 0.054764572873016170718 -0.055124677801970431434 -0.035323547602914159849 -0.17296880939707715008 0.011403854806722568682 0.10635317283590535464 -0.015517169325431845461];

% Output 1
y1_step2.ymin = -1;
y1_step2.gain = [707.736849164992;35.7927935377946;4.6771169694564;1.15052073971212;1.64965557162192];
y1_step2.xoffset = [-0.00114765981966597;-0.0236032454492983;-0.225249413683294;-1.38997538541058;-0.506106885820918];
y1_step1.xrows = 6;
y1_step1.keep = [2 3 4 5 6];
y1_step1.remove = 1;
y1_step1.constants = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step2);
y1 = removeconstantrows_reverse(y1,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end

% Remove Constants Output Reverse-Processing Function
function x = removeconstantrows_reverse(y,settings)
  Q = size(y,2);
  x = nan(settings.xrows,Q,'like',y);
  x(settings.keep,:) = y;
  x(settings.remove,:) = repmat(settings.constants,1,Q);
end
