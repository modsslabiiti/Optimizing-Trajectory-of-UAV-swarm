function [y1] = BlackBox_Y(x1)
%BLACKBOX_Y neural network simulation function.
%
% Auto-generated by MATLAB, 20-Jan-2023 13:55:54.
% 
% [y1] = BlackBox_Y(x1) takes these arguments:
%   x = 6xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2 3];
x1_step2.xoffset = [10.0119839684004;10.0065866758611;-9.99738929317946];
x1_step2.gain = [0.200281562308473;0.200266191530816;0.400345740015214];
x1_step2.ymin = -1;

% Layer 1
b1 = [-3.4600435275298480065;1.4133944519207859436;2.2606417413230337488;2.6183938811823073145;-0.21952969827877705233;0.52076866273394673001;-2.8540780256945641469;2.5590736596197110053;-5.2261126576942071864;-2.8832974320080140274];
IW1_1 = [0.83588193479489081295 0.31711809760378184553 2.2971111590324104768;-1.2629041021293698766 3.1229590431078961821 1.3840112247076341578;-2.0996383154185065401 4.117940711964735101 -1.0196232552050994435;-1.1780479270075225884 -0.88499271937430457058 -1.6869775508419642129;2.493192142536016398 -1.1947948388468181413 -4.9138455726488201591;-0.55990473595813583518 1.9385789699222433224 -2.182749796279141119;-2.3181376272221427826 -3.4803368642564409541 -2.489078021702813448;1.9143541463871986963 4.5243643905554016271 2.3841733295904674605;-4.5467076290832402208 -0.27503875571389713173 4.1143522045235885187;-1.8221457665092906097 -4.3657397509211666176 -3.0249110796403986257];

% Layer 2
b2 = [0.4236162733864327623;0.63864508147266285665;-0.2847888425559547132;0.56982411568608015706;-0.86663793873898065101];
LW2_1 = [0.66102630989415667173 -0.1570536488202713965 0.7134657624055712466 -0.29599226251452626091 0.38301998754703342476 -0.24081511175115413725 -0.69645458470556720343 -0.36406808617518515714 -0.68981539208046649403 -0.46525068907919880923;0.2375155892302351357 -0.13516205551249055317 -0.042789509707229229918 0.034207444138628306796 0.0044275428525371793298 -0.016747640599245196269 0.52403893063809481312 -0.012774723541649565459 -0.0074491387753726576865 -0.56918032820208463995;0.022439541041164148827 0.079688878446003877376 0.020810793048696984986 -0.021617759549184236562 0.021225817035189619569 0.044355614676954355224 -0.13440995343066131085 -0.20999661993713528152 0.003219158609955249245 -0.077712574746491236422;0.42509512498425938709 0.019949117446410809945 -0.063109215703853027701 0.084239291552043765732 -0.051858699853539289015 -0.0075721488651872724193 0.026604971890540805857 0.2904910865106404283 0.058314313310318631467 0.31643849090552889081;-0.13195599459463860925 0.00261287977026884808 0.037857250520534242721 -0.023911808811417391285 0.021126991864274174276 -0.017216133741766510845 -0.17313462324566908368 -0.23420761231014528003 -0.042136311327294076468 -0.084274308081270385418];

% Output 1
y1_step2.ymin = -1;
y1_step2.gain = [151.684994943097;4.10460676507939;0.527876496892313;0.204571098935282;0.0909143065982466];
y1_step2.xoffset = [-0.00619962716819297;-0.305871558845385;-1.54504381742487;-5.6396680393431;-3.79430784047304];
y1_step1.xrows = 6;
y1_step1.keep = [2 3 4 5 6];
y1_step1.remove = 1;
y1_step1.constants = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step2);
y1 = removeconstantrows_reverse(y1,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end

% Remove Constants Output Reverse-Processing Function
function x = removeconstantrows_reverse(y,settings)
  Q = size(y,2);
  x = nan(settings.xrows,Q,'like',y);
  x(settings.keep,:) = y;
  x(settings.remove,:) = repmat(settings.constants,1,Q);
end
